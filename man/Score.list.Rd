% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/Score.R
\name{Score.list}
\alias{Score}
\alias{Score.list}
\title{Score risk predictions}
\usage{
\method{Score}{list}(object, formula, byformula, data, metrics = c("auc",
  "brier"), plots = c("roc", "calibration"), cause = 1, times, landmarks,
  useEventTimes = FALSE, nullModel = TRUE, test = TRUE, alpha = 0.05,
  dolist, censMethod = "ipcw", censModel = "cox", splitMethod, B, M,
  trainseeds, ...)
}
\arguments{
\item{object}{List of risk predictions (see details and examples).}

\item{formula}{A formula which identifies the outcome (left hand side). For right censored outcome,
the right hand side of the formula is used to estimate the IPCW model.}

\item{data}{Data set or table in which the formula can be interpreted.}

\item{metrics}{Character vector specifying which metrics to apply. Implemented are \code{"auc"} and \code{"Brier"}.}

\item{plots}{Character vector specifying which plots to prepare.}

\item{cause}{Event of interest. Used for binary outcome \code{Y} to specify that risks are risks of the event \code{Y=event}
and for competing risks outcome to specify the cause of interest.}

\item{times}{For survival and competing risks outcome: list of prediction horizons. All times which are greater
than the maximal observed time in the data set are removed.}

\item{landmarks}{Not yet implemented.}

\item{useEventTimes}{If \code{TRUE} add all unique event times to argument \code{times}.}

\item{nullModel}{If \code{TRUE} add the null model which ignores the covariates and predicts the prevalence for all subjects.}

\item{test}{If \code{TRUE} compute confidence intervals. Also do model comparisons specified in \code{dolist}.}

\item{alpha}{Level of significance.}

\item{dolist}{Vector of integers specifying which risks to compare to all other risks in \code{object}.}

\item{censMethod}{Method for dealing with right censored data. Either \code{"ipcw"} or \code{"pseudo"}.}

\item{censModel}{Model for estimating inverse probability of censored weights.}

\item{splitMethod}{Method for cross-validation.}

\item{B}{Number of cross-validation steps.}

\item{M}{Size of subsamples for cross-validation. If specified it has to be an integer smaller than the size of \code{data}.}

\item{trainseeds}{Seeds for training models during cross-validation.}

\item{...}{Not yet used.}
}
\value{
Data table with scores and tests.
}
\description{
Method to Score risk markers and risk prediction models
}
\details{
We compute the Brier score and the area under the ROC curve. For survival possibly with competing risk both are time-dependent.
}
\examples{
# binary outcome
library(lava)
set.seed(18)
learndat <- sampleData(100,outcome="binary")
testdat <- sampleData(40,outcome="binary")

# score logistic regression models
lr1 = glm(Y~X1+X2+X7+X9,data=learndat,family=binomial)
lr2 = glm(Y~X3+X5+X6,data=learndat,family=binomial)
Score(list("LR(X1+X2+X7+X9)"=lr1,"LR(X3+X5+X6)"=lr2),formula=Y~1,data=testdat)

# compute AUC for a list of continuous markers
markers = as.list(testdat[,1:5])
u=Score(markers,formula=Y~1,data=testdat,metrics=c("auc"))

# cross-validation
lr1a = glm(Y~X6,data=learndat,family=binomial)
lr2a = glm(Y~X7+X8+X9,data=learndat,family=binomial)
Score(list("LR1"=lr1a,"LR2"=lr2a),formula=Y~1,data=learndat,splitMethod="bootcv",B=3)

# survival outcome

# Score Cox regression models
library(survival)
library(rms)
library(prodlim)
set.seed(18)
trainSurv <- sampleData(100,outcome="survival")
testSurv <- sampleData(40,outcome="survival")
cox1 = coxph(Surv(time,event)~X1+X2+X7+X9,data=trainSurv)
cox2 = coxph(Surv(time,event)~X3+X5+X6,data=trainSurv)
Score(list("Cox(X1+X2+X7+X9)"=cox1,"Cox(X3+X5+X6)"=cox2),
      formula=Surv(time,event)~1,data=testSurv,test=FALSE,times=c(5,8))

# time-dependent AUC for list of markers
survmarkers = as.list(testSurv[,1:5])
Score(survmarkers,
      formula=Surv(time,event)~1,metrics="auc",data=testSurv,
test=TRUE,times=c(5,8))

# compare models on test data
Score(list("Cox(X1+X2+X7+X9)"=cox1,"Cox(X3+X5+X6)"=cox2),
      formula=Surv(time,event)~1,data=testSurv,test=TRUE,times=c(5,8))

# crossvalidation models in traindata
Score(list("Cox(X1+X2+X7+X9)"=cox1,"Cox(X3+X5+X6)"=cox2),
      formula=Surv(time,event)~1,data=trainSurv,test=TRUE,times=c(5,8),
splitMethod="bootcv",B=3)

# restrict number of comparisons
Score(list("Cox(X1+X2+X7+X9)"=cox1,"Cox(X3+X5+X6)"=cox2),
      formula=Surv(time,event)~1,data=trainSurv,dolist=2,
nullModel=FALSE,test=TRUE,times=c(5,8),splitMethod="bootcv",B=3)

# competing risks outcome
set.seed(18)
trainCR <- sampleData(40,outcome="competing.risks")
testCR <- sampleData(40,outcome="competing.risks")
library(riskRegression)
library(cmprsk)
# Cause-specific Cox regression
csc1 = CSC(Hist(time,event)~X1+X2+X7+X9,data=trainCR)
csc2 = CSC(Hist(time,event)~X3+X5+X6,data=trainCR)
# Fine-Gray regression
fgr1 = FGR(Hist(time,event)~X1+X2+X7+X9,data=trainCR,cause=1)
fgr2 = FGR(Hist(time,event)~X3+X5+X6,data=trainCR,cause=1)
Score(list("CSC(X1+X2+X7+X9)"=csc1,"CSC(X3+X5+X6)"=csc2,
           "FGR(X1+X2+X7+X9)"=fgr1,"FGR(X3+X5+X6)"=fgr2),
      formula=Hist(time,event)~1,data=testCR,test=TRUE,times=c(5,8))
}
\author{
Thomas A Gerds \email{tag@biostat.ku.dk} and Paul Blanche \email{paul.blanche@univ-ubs.fr}
}

